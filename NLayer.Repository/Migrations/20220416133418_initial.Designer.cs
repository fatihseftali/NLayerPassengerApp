// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NLayer.Repository;

#nullable disable

namespace NLayer.Repository.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220416133418_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("NLayer.Core.Models.Passenger", b =>
                {
                    b.Property<int>("UniquePassengerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UniquePassengerId"), 1L, 1);

                    b.Property<int>("DocumentNo")
                        .HasColumnType("int");

                    b.Property<int>("DocumentType")
                        .HasColumnType("int");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("IssueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("UniquePassengerId");

                    b.ToTable("Passengers", (string)null);

                    b.HasData(
                        new
                        {
                            UniquePassengerId = 1,
                            DocumentNo = 1,
                            DocumentType = 1,
                            Gender = "Kadın",
                            IssueDate = new DateTime(2022, 4, 16, 16, 34, 18, 484, DateTimeKind.Local).AddTicks(1609),
                            Name = "Ayşe",
                            Surname = "Kılıç"
                        },
                        new
                        {
                            UniquePassengerId = 2,
                            DocumentNo = 2,
                            DocumentType = 0,
                            Gender = "Erkek",
                            IssueDate = new DateTime(2022, 4, 16, 16, 34, 18, 484, DateTimeKind.Local).AddTicks(1624),
                            Name = "Bora",
                            Surname = "Demir"
                        },
                        new
                        {
                            UniquePassengerId = 3,
                            DocumentNo = 3,
                            DocumentType = 2,
                            Gender = "Kadın",
                            IssueDate = new DateTime(2022, 4, 16, 16, 34, 18, 484, DateTimeKind.Local).AddTicks(1627),
                            Name = "Deniz",
                            Surname = "Aydın"
                        },
                        new
                        {
                            UniquePassengerId = 4,
                            DocumentNo = 4,
                            DocumentType = 0,
                            Gender = "Erkek",
                            IssueDate = new DateTime(2022, 4, 16, 16, 34, 18, 484, DateTimeKind.Local).AddTicks(1629),
                            Name = "Erdem",
                            Surname = "Kaya"
                        },
                        new
                        {
                            UniquePassengerId = 5,
                            DocumentNo = 5,
                            DocumentType = 0,
                            Gender = "Kadın",
                            IssueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Test",
                            Surname = "Test"
                        },
                        new
                        {
                            UniquePassengerId = 6,
                            DocumentNo = 6,
                            DocumentType = 1,
                            Gender = "Erkek",
                            IssueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Test2",
                            Surname = "Test2"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
